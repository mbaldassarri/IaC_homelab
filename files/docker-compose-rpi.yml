version: '3.3'
services:
  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    restart: always
    ports:
      - "9000:9000/tcp"
    environment:
      - TZ=Europe/Rome
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/pi/docker_files/portainer/data:/data
  heimdall:
    image: lscr.io/linuxserver/heimdall:latest
    container_name: heimdall
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - /home/pi/docker_files/heimdall-dashboard/config:/config
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "8085:80/tcp"
    environment:
      TZ: 'Europe/Rome'
    volumes:
      - './home/pi/docker_files/pihole/config:/etc/pihole'
      - './home/pi/docker_files/pihole/dnsmasq.d:/etc/dnsmasq.d'
    restart: unless-stopped
  wireguard:
    image: linuxserver/wireguard
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Rome
      - SERVERURL=grottazzolina.duckdns.org
      - SERVERPORT=51822
      - PEERS=4
      - PEERDNS=auto
      - INTERNAL_SUBNET=10.15.15.0
    volumes:
      - /opt/wireguard-server/config:/config
      - /lib/modules:/lib/modules
    ports:
      - 51822:51820/udp
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    restart: always
  duckdns: 
    image: lscr.io/linuxserver/duckdns:latest
    container_name: duckdns
    environment:
      - PUID=1000 
      - PGID=1000 
      - TZ=Europe/Rome
      - SUBDOMAINS=grottazzolina
      - TOKEN=b619cf6c-7af6-415c-a9dd-60fd0e890d87
      - LOG_FILE=false 
    volumes:
      - /opt/duckdns/config:/config
    restart: always
  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - /home/pi/docker_files/homeassistant/config:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    privileged: true
    network_mode: host
    environment:
      - TZ=Europe/Rome
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
    depends_on:
     - mosquitto
     - postgres
     - zigbee2mqtt
     - esphome
  postgres:
    image: postgres
    container_name: postgres
    restart: unless-stopped
    volumes:
      - /home/pi/docker_files/postgres/data:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    environment:
      - POSTGRES_USER=ha
      - POSTGRES_PASSWORD=ha
      - POSTGRES_DB=ha
    ports:
      - 5432:5432
  mosquitto:
      image: eclipse-mosquitto:2.0
      restart: always
      container_name: mosquitto
      volumes:
        - /home/pi/docker_files/mosquitto/data:/mosquitto/data
        - /home/pi/docker_files/mosquitto/config:/mosquitto/config
        - /home/pi/docker_files/mosquitto/log:/mosquitto/log
      ports:
        - "1883:1883"
        - "9001:9001"
  zigbee2mqtt:
    container_name: zigbee2mqtt
    restart: unless-stopped
    image: koenkk/zigbee2mqtt
    volumes:
      - /home/pi/docker_files/zigbee2mqtt/data:/app/data
      - /run/udev:/run/udev:ro
    ports:
      - 8080:8080
    environment:
      - TZ=Europe/Rome
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
    depends_on:
     - mosquitto
  esphome:
    container_name: esphome
    image: ghcr.io/esphome/esphome
    volumes:
      - /home/pi/docker_files/esphome/config:/config
      - /etc/localtime:/etc/localtime:ro
    restart: always
    privileged: true
    network_mode: host